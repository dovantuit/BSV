#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanSacVietPro.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BanSacViet")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBantin(Bantin instance);
    partial void UpdateBantin(Bantin instance);
    partial void DeleteBantin(Bantin instance);
    partial void InsertChitiet(Chitiet instance);
    partial void UpdateChitiet(Chitiet instance);
    partial void DeleteChitiet(Chitiet instance);
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    #endregion
		
		public DataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BanSacVietConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bantin> Bantins
		{
			get
			{
				return this.GetTable<Bantin>();
			}
		}
		
		public System.Data.Linq.Table<Chitiet> Chitiets
		{
			get
			{
				return this.GetTable<Chitiet>();
			}
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.chiTiet_update")]
		public int chiTiet_update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(200)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string noiDung, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title, noiDung, iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bantin_Delete")]
		public int Bantin_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDbanTin", DbType="Int")] System.Nullable<int> iDbanTin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDbanTin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bantin_Insert")]
		public int Bantin_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string noiDung)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), noiDung);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bantin_Select")]
		public ISingleResult<Bantin_SelectResult> Bantin_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<Bantin_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bantin_SelectAll")]
		public ISingleResult<Bantin_SelectAllResult> Bantin_SelectAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Bantin_SelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Bantin_Update")]
		public int Bantin_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string noiDung, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDbanTin", DbType="Int")] System.Nullable<int> iDbanTin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), noiDung, iDbanTin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.chiTiet_insert")]
		public int chiTiet_insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(200)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string noiDung, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ngaydang, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDbanTin", DbType="Int")] System.Nullable<int> iDbanTin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title, noiDung, ngaydang, iDbanTin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.chiTiet_SelectAll")]
		public ISingleResult<chiTiet_SelectAllResult> chiTiet_SelectAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<chiTiet_SelectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Chitiet_SelectID")]
		public ISingleResult<Chitiet_SelectIDResult> Chitiet_SelectID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDbanTin", DbType="Int")] System.Nullable<int> iDbanTin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDbanTin);
			return ((ISingleResult<Chitiet_SelectIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.chiTiet_SLX")]
		public int chiTiet_SLX([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lanXem, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lanXem, iD);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bantin")]
	public partial class Bantin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDbantin;
		
		private string _noiDung;
		
		private EntitySet<Chitiet> _Chitiets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDbantinChanging(int value);
    partial void OnIDbantinChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    #endregion
		
		public Bantin()
		{
			this._Chitiets = new EntitySet<Chitiet>(new Action<Chitiet>(this.attach_Chitiets), new Action<Chitiet>(this.detach_Chitiets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					this.OnIDbantinChanging(value);
					this.SendPropertyChanging();
					this._IDbantin = value;
					this.SendPropertyChanged("IDbantin");
					this.OnIDbantinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(50)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bantin_Chitiet", Storage="_Chitiets", ThisKey="IDbantin", OtherKey="IDbantin")]
		public EntitySet<Chitiet> Chitiets
		{
			get
			{
				return this._Chitiets;
			}
			set
			{
				this._Chitiets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitiets(Chitiet entity)
		{
			this.SendPropertyChanging();
			entity.Bantin = this;
		}
		
		private void detach_Chitiets(Chitiet entity)
		{
			this.SendPropertyChanging();
			entity.Bantin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitiet")]
	public partial class Chitiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _title;
		
		private string _noiDung;
		
		private System.Nullable<int> _lanXem;
		
		private System.Nullable<System.DateTime> _ngaydang;
		
		private System.Nullable<int> _IDbantin;
		
		private EntityRef<Bantin> _Bantin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    partial void OnlanXemChanging(System.Nullable<int> value);
    partial void OnlanXemChanged();
    partial void OnngaydangChanging(System.Nullable<System.DateTime> value);
    partial void OnngaydangChanged();
    partial void OnIDbantinChanging(System.Nullable<int> value);
    partial void OnIDbantinChanged();
    #endregion
		
		public Chitiet()
		{
			this._Bantin = default(EntityRef<Bantin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(MAX)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanXem", DbType="Int")]
		public System.Nullable<int> lanXem
		{
			get
			{
				return this._lanXem;
			}
			set
			{
				if ((this._lanXem != value))
				{
					this.OnlanXemChanging(value);
					this.SendPropertyChanging();
					this._lanXem = value;
					this.SendPropertyChanged("lanXem");
					this.OnlanXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydang
		{
			get
			{
				return this._ngaydang;
			}
			set
			{
				if ((this._ngaydang != value))
				{
					this.OnngaydangChanging(value);
					this.SendPropertyChanging();
					this._ngaydang = value;
					this.SendPropertyChanged("ngaydang");
					this.OnngaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", DbType="Int")]
		public System.Nullable<int> IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					if (this._Bantin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDbantinChanging(value);
					this.SendPropertyChanging();
					this._IDbantin = value;
					this.SendPropertyChanged("IDbantin");
					this.OnIDbantinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bantin_Chitiet", Storage="_Bantin", ThisKey="IDbantin", OtherKey="IDbantin", IsForeignKey=true)]
		public Bantin Bantin
		{
			get
			{
				return this._Bantin.Entity;
			}
			set
			{
				Bantin previousValue = this._Bantin.Entity;
				if (((previousValue != value) 
							|| (this._Bantin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bantin.Entity = null;
						previousValue.Chitiets.Remove(this);
					}
					this._Bantin.Entity = value;
					if ((value != null))
					{
						value.Chitiets.Add(this);
						this._IDbantin = value.IDbantin;
					}
					else
					{
						this._IDbantin = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bantin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDName;
		
		private string _userName;
		
		private string _passWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNameChanging(int value);
    partial void OnIDNameChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassWordChanging(string value);
    partial void OnpassWordChanged();
    #endregion
		
		public DangNhap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDName", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDName
		{
			get
			{
				return this._IDName;
			}
			set
			{
				if ((this._IDName != value))
				{
					this.OnIDNameChanging(value);
					this.SendPropertyChanging();
					this._IDName = value;
					this.SendPropertyChanged("IDName");
					this.OnIDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passWord", DbType="NVarChar(50)")]
		public string passWord
		{
			get
			{
				return this._passWord;
			}
			set
			{
				if ((this._passWord != value))
				{
					this.OnpassWordChanging(value);
					this.SendPropertyChanging();
					this._passWord = value;
					this.SendPropertyChanged("passWord");
					this.OnpassWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Bantin_SelectResult
	{
		
		private int _ID;
		
		private string _title;
		
		private string _noiDung;
		
		private System.Nullable<int> _lanXem;
		
		private System.Nullable<System.DateTime> _ngaydang;
		
		private System.Nullable<int> _IDbantin;
		
		public Bantin_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(MAX)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this._noiDung = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanXem", DbType="Int")]
		public System.Nullable<int> lanXem
		{
			get
			{
				return this._lanXem;
			}
			set
			{
				if ((this._lanXem != value))
				{
					this._lanXem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydang
		{
			get
			{
				return this._ngaydang;
			}
			set
			{
				if ((this._ngaydang != value))
				{
					this._ngaydang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", DbType="Int")]
		public System.Nullable<int> IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					this._IDbantin = value;
				}
			}
		}
	}
	
	public partial class Bantin_SelectAllResult
	{
		
		private int _IDbantin;
		
		private string _noiDung;
		
		public Bantin_SelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", DbType="Int NOT NULL")]
		public int IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					this._IDbantin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(50)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this._noiDung = value;
				}
			}
		}
	}
	
	public partial class chiTiet_SelectAllResult
	{
		
		private int _ID;
		
		private string _title;
		
		private string _noiDung;
		
		private System.Nullable<int> _lanXem;
		
		private System.Nullable<System.DateTime> _ngaydang;
		
		private System.Nullable<int> _IDbantin;
		
		public chiTiet_SelectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(MAX)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this._noiDung = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanXem", DbType="Int")]
		public System.Nullable<int> lanXem
		{
			get
			{
				return this._lanXem;
			}
			set
			{
				if ((this._lanXem != value))
				{
					this._lanXem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydang
		{
			get
			{
				return this._ngaydang;
			}
			set
			{
				if ((this._ngaydang != value))
				{
					this._ngaydang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", DbType="Int")]
		public System.Nullable<int> IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					this._IDbantin = value;
				}
			}
		}
	}
	
	public partial class Chitiet_SelectIDResult
	{
		
		private int _ID;
		
		private string _title;
		
		private string _noiDung;
		
		private System.Nullable<int> _lanXem;
		
		private System.Nullable<System.DateTime> _ngaydang;
		
		private System.Nullable<int> _IDbantin;
		
		public Chitiet_SelectIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(MAX)")]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this._noiDung = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanXem", DbType="Int")]
		public System.Nullable<int> lanXem
		{
			get
			{
				return this._lanXem;
			}
			set
			{
				if ((this._lanXem != value))
				{
					this._lanXem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydang
		{
			get
			{
				return this._ngaydang;
			}
			set
			{
				if ((this._ngaydang != value))
				{
					this._ngaydang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDbantin", DbType="Int")]
		public System.Nullable<int> IDbantin
		{
			get
			{
				return this._IDbantin;
			}
			set
			{
				if ((this._IDbantin != value))
				{
					this._IDbantin = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
